<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhkj.project.business.mapper.BusiReimburseMapper">
    
    <resultMap type="com.xhkj.project.business.domain.BusiReimburse" id="BusiReimburseResult">
        <result property="reimburseId"    column="reimburse_id"    />
        <result property="userId"    column="user_id"    />
        <result property="deptId"    column="dept_id"    />
        <result property="inPrjFlag"    column="in_prj_flag"    />
        <result property="projectId"    column="project_id"    />
        <result property="projectName"    column="project_name"    />
        <result property="reimburseReason"    column="reimburse_reason"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="workflowId"    column="workflow_id"    />
        <result property="reimburseType"    column="reimburse_type"    />

    </resultMap>

    <sql id="selectBusiReimburseVo">
        select reimburse_id, user_id, dept_id, in_prj_flag, project_id, project_name, reimburse_reason, create_by, create_time, update_by, update_time, remark,workflow_id,reimburse_type
    </sql>

    <select id="selectBusiReimburseList" parameterType="BusiReimburseAprVo" resultType="BusiReimburseAprVo">
        select
        br.reimburse_id, br.user_id, br.dept_id,  br.in_prj_flag, br.project_id, br.project_name, br.reimburse_reason,
        br.create_by,  br.create_time,  br.update_by,  br.update_time,  br.remark,br.workflow_id,br.reimburse_type,
        ifnull(wb.bill_status,2) as billStatus,
        swnc.workflow_node_user_name as orginHandler
        from busi_reimburse br
        left join workflow_bill wb on br.reimburse_id = wb.bill_id  and wb.workflow_id = br.workflow_id
        left join sys_workflow_node swn on swn.workflow_node_id = wb.workflow_node_id
        left join sys_workflow_node_checker swnc on swnc.workflow_node_id = swn.workflow_node_id

        left join sys_user su on su.user_id = br.user_id
        left join sys_dept sd on sd.dept_id = su.dept_id
        <where>
            <if test="userId != null "> and br.user_id = #{userId}</if>
            <if test="deptId != null "> and br.dept_id = #{deptId}</if>
            <if test="inPrjFlag != null "> and br.in_prj_flag = #{inPrjFlag}</if>
            <if test="workflowId != null "> and br.workflow_id = #{workflowId}</if>
            <if test="projectId != null "> and br.project_id = #{projectId}</if>
            <if test="projectName != null  and projectName != ''"> and br.project_name like concat('%', #{projectName}, '%')</if>
            <if test="reimburseReason != null  and reimburseReason != ''"> and br.reimburse_reason = #{reimburseReason}</if>
            <if test="beginTime != null and beginTime != ''"> and DATE_FORMAT(br.create_time,'%Y-%m-%d') >= DATE_FORMAT(#{beginTime},'%Y-%m-%d')</if>
            <if test="endTime != null and endTime != ''"> and DATE_FORMAT(br.create_time,'%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{endTime},'%Y-%m-%d') </if>
            <if test="billStatus != null  and billStatus != ''"> and wb.bill_status = #{billStatus}</if>
            <if test="reimburseType != null  and reimburseType != ''"> and br.reimburse_type = #{reimburseType}</if>
            ${dataScope}
        </where>
    </select>

    <select id="selectBusiReimburseById" parameterType="Long" resultMap="BusiReimburseResult">
        <include refid="selectBusiReimburseVo"/>
        from busi_reimburse
        where reimburse_id = #{reimburseId}
    </select>
        
    <insert id="insertBusiReimburse" parameterType="com.xhkj.project.business.domain.BusiReimburse" useGeneratedKeys="true" keyProperty="reimburseId">
        insert into busi_reimburse
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null ">user_id,</if>
            <if test="deptId != null ">dept_id,</if>
            <if test="inPrjFlag != null ">in_prj_flag,</if>
            <if test="projectId != null ">project_id,</if>
            <if test="projectName != null  and projectName != ''">project_name,</if>
            <if test="reimburseReason != null  and reimburseReason != ''">reimburse_reason,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="remark != null  and remark != ''">remark,</if>
            <if test="workflowId != null">workflow_id,</if>
            <if test="reimburseType != null and reimburseType != ''">reimburse_type,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null ">#{userId},</if>
            <if test="deptId != null ">#{deptId},</if>
            <if test="inPrjFlag != null ">#{inPrjFlag},</if>
            <if test="projectId != null ">#{projectId},</if>
            <if test="projectName != null  and projectName != ''">#{projectName},</if>
            <if test="reimburseReason != null  and reimburseReason != ''">#{reimburseReason},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="remark != null  and remark != ''">#{remark},</if>
            <if test="workflowId != null">#{workflowId},</if>
            <if test="reimburseType != null  and reimburseType != ''">#{reimburseType},</if>
         </trim>
    </insert>

    <update id="updateBusiReimburse" parameterType="com.xhkj.project.business.domain.BusiReimburse">
        update busi_reimburse
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null ">user_id = #{userId},</if>
            <if test="deptId != null ">dept_id = #{deptId},</if>
            <if test="inPrjFlag != null ">in_prj_flag = #{inPrjFlag},</if>
            <if test="projectId != null ">project_id = #{projectId},</if>
            <if test="projectName != null  and projectName != ''">project_name = #{projectName},</if>
            <if test="reimburseReason != null  and reimburseReason != ''">reimburse_reason = #{reimburseReason},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
            <if test="workflowId != null">workflow_id = #{workflowId},</if>
            <if test="reimburseType != null">reimburse_type = #{reimburseType},</if>
        </trim>
        where reimburse_id = #{reimburseId}
    </update>

    <delete id="deleteBusiReimburseById" parameterType="Long">
        delete from busi_reimburse where reimburse_id = #{reimburseId}
    </delete>

    <delete id="deleteBusiReimburseByIds" parameterType="String">
        delete from busi_reimburse where reimburse_id in 
        <foreach item="reimburseId" collection="array" open="(" separator="," close=")">
            #{reimburseId}
        </foreach>
    </delete>

    <insert id="insertBusiReimburseBatch" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="reimburseId">
        insert into busi_reimburse (  user_id, dept_id, in_prj_flag, project_id, project_name, reimburse_reason, create_by, create_time, update_by, update_time, remark) values
        <foreach item="item" collection="list" separator=",">
            (  #{item.$column.attrname}, #{item.$column.attrname}, #{item.$column.attrname}, #{item.$column.attrname}, #{item.$column.attrname}, #{item.$column.attrname}, #{item.$column.attrname}, #{item.$column.attrname}, #{item.$column.attrname}, #{item.$column.attrname}, #{item.$column.attrname})
        </foreach>
    </insert>
    <!-- 以上是自动生成的代码尽量别动 -->
</mapper>